- hosts: 127.0.0.1 
  connection: local
  sudo: true
  vars:
      username: "{{ lookup('env', 'USER') }}"
  tasks:

    - name: apt install php7.0
      apt: name={{ item }}
      with_items:
        - php7.0
        - php7.0-dev
        - php7.0-mysql
        - php7.0-curl
        - php7.0-mbstring
        - php7.0-xml

    - name: apt install git
      apt: name=git

    - name: is composer already installed
      shell: /usr/bin/test -f /usr/bin/composer
      register: check_composer
      ignore_errors: True

    - name: install composer
      shell: curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin
      when: check_composer|failed

    - name: move composer.phar to composer
      file: src=/usr/bin/composer.phar dest=/usr/bin/composer state=link
      when: check_composer|failed

    - name: install nginx
      apt: name=nginx

    - name: copy nginx default_config
      template: src=templates/default.conf dest=/etc/nginx/conf.d/default.conf mode=0644

    - name: copy nginx nginx_config
      template: src=templates/nginx.conf dest=/etc/nginx/nginx.conf mode=0644

    - name: remove apache2
      apt: name=apache2 state=absent

    - name: ensure nginx start
      service: name=nginx state=restarted enabled=yes

    - name: install apt keys
      apt_key: url=http://nginx.org/keys/nginx_signing.key state=present

    - name: set repository
      apt_repository: repo='deb http://nginx.org/packages/mainline/ubuntu/ xenial nginx' state=present

    - name: set repository
      apt_repository: repo='deb-src http://nginx.org/packages/mainline/ubuntu/ xenial nginx' state=present

    - name: apt update
      apt: update_cache=yes

    - name: install nginx unit
      apt: name={{item}}
      with_items:
         - unit

    - name: ensure nginx unit start
      service: name=unitd state=restarted enabled=yes

    - name: copy nginx unit setting json
      template: src=templates/start.json dest=/etc/nginx/start.json mode=0644

    - name: change timezone to JST
      command: echo "Asia/Tokyo" | sudo tee /etc/timezone

    - name: change timezone reconfigure
      command: dpkg-reconfigure --frontend noninteractive tzdata

    - name: install mysql-server
      apt: name={{ item }}
      with_items:
        - mysql-server
        - python-mysqldb

    - name: start and enable mysql
      service: name=mysql state=started enabled=yes
      sudo: yes
    
    - name: create application database
      mysql_db: name=bench encoding=utf8 state=present
    
    - name: create application database user
      mysql_user: name=bench password=bench host=localhost priv=bench.*:ALL state=present

    - name: clone benchapp
      git: repo=https://github.com/hanhan1978/benchapp.git
           dest=/vagrant/benchapp version=master accept_hostkey=yes

    - name: composer install
      composer: command=install working_dir=/vagrant/benchapp

    - name: link env
      file: src=/vagrant/benchapp/.env.example dest=/vagrant/benchapp/.env state=link

    - name: migration
      shell: >
        cd /vagrant/benchapp;
        php artisan migrate --force;

    - name: seed 
      shell: >
        cd /vagrant/benchapp;
        php artisan db:seed --force;

    - name: start unit
      shell: >
        curl -X PUT -d @/etc/nginx/start.json --unix-socket /run/control.unit.sock http://localhost;



